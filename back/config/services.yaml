# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    slugger_to_lower: '%env(bool:SLUGGER_TO_LOWER)%'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/Tests/'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller/'
        tags: ['controller.service_arguments']

    App\Service\MySlugger:
        # Les arguments du constructeur
        arguments:
            $toLower: '%slugger_to_lower%'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    App\EventListener\UserListener:
        tags:
            -
                # these are the options required to define the entity listener
                # Evénement Doctrine Entity
                name: 'doctrine.orm.entity_listener'
                # Type d'event du cycle de vie (Lifecycle)
                event: 'prePersist'
                # L'entité concernée
                entity: 'App\Entity\User'
                lazy: true
                method: prePersist

    App\EventListener\AvatarListener:
        tags:
            -
                # these are the options required to define the entity listener
                # Evénement Doctrine Entity
                name: 'doctrine.orm.entity_listener'
                # Type d'event du cycle de vie (Lifecycle)
                event: 'prePersist'
                # L'entité concernée
                entity: 'App\Entity\Avatar'
                lazy: true
                method: prePersist